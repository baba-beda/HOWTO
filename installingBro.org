#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:2
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: Installing Bro on Ubuntu 16.04
#+DATE: <2017-01-14 14:20:57 Saturday>
#+AUTHOR: George Jones
#+EMAIL: eludom@gmail.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.0.50.1 (Org mode 9.0.2)

* What Is This?
  These are my notes from installing and learning Bro.

  These are both notes-to-self in case I want to repeat these
  processes later and notes to anyone else who wants a fairly
  step-by-step process.

  - what :: installing bro on Unbutu 16.04
  - why :: learning bro, from the ground up.
  - who :: gmj@pobox.com
  - when :: <2017-01-14>
  - where :: Ubuntu Laptop running 16.04
  - how :: Steps I Mostly following this https://www.bro.org/sphinx/install/install.html and documenting the  steps

* DONE Install bro prereqs and optional geoip lib
  #+begin_example
  sudo apt-get install cmake make gcc g++ flex bison libpcap-dev libssl-dev python-dev swig zlib1g-dev
  #+end_example

  #+begin_example
  sudo apt-get install libgeoip-dev
  wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
  gunzip GeoLiteCity.dat.gz
  sudo  mv GeoLiteCity.dat /usr/share/GeoIP/
  #+end_example

* DONE Get the latest bro source
  #+begin_example
  mkdir -p ~/src
  cd ~/src
  git clone --recursive git://git.bro.org/bro
  #+end_example

* DONE compile bro
   This takes a while...

   #+begin_example
   cd ~/src/bro
   ./configure 
   make
   #+end_example

* DONE install bro
   #+begin_example
   sudo make install
   #+end_example
* DONE configure bro
** Set up the path
   Put this somewhere where it will get executed
   #+begin_example
   export PATH=/usr/local/bro/bin:$PATH
   #+end_example

   May want to add to /etc/environment and/or other places

** Set up postfix for local delivery
     Not sure all this is right/necessary, but mail delivers now
     #+begin_example
     sudo apt-get install --reinstall postfix     
     sudo cp /usr/share/postfix/main.cf.debian /etc/postfix/main.cf
     sudo cat << END > /etc/aliases
postmaster:    root
root:	       george
ggeorge:	       george
END
     sudo newaliases     
     sudo systemctl enable postfix.service
     sudo systemctl daemon-reload
     george@ed bro [master] $ sudo systemctl restart postfix.service


     #+end_example

** Edit config files
   In =/sudo:root@ed:/usr/local/bro/etc/node.cfg= I made the
   following changes to listen to the local wireless interface:

   #+begin_example
   #interface=eth0
   interface=wlo1
   #+end_example

   I took the defaults in broctl.cfg and networks.cfg

* DONE Run broctl to install and start
   #+begin_example
   sudo bash
   export PATH=/usr/local/bro/bin:$PATH
   broctl
   [BroControl] > install
   [BroControl] > start
   #+end_example
* DONE Look at what's landing in the logs
   Look at what's landing in the logs =/usr/local/bro/logs/current/=
*** Example: conn.log#+begin_example - raw
#separator \x09
#set_separator	,
#empty_field	(empty)
#unset_field	-
#path	conn
#open	2017-01-14-08-14-00
#fields	ts	uid	id.orig_h	id.orig_p	id.resp_h	id.resp_p	proto	service	duration	orig_bytes	resp_bytes	conn_state	local_orig	local_resp	missed_bytes	history	orig_pkts	orig_ip_bytes	resp_pkts	resp_ip_bytes	tunnel_parents
#types	time	string	addr	port	addr	port	enum	string	interval	count	count	string	bool	bool	count	string	count	count	count	count	set[string]
1484403228.025398	CJn7CC45hBZAGTU7Ej	192.168.86.105	55690	192.150.187.43	443	tcp	ssl	7.019289	929	66987	SF	T	F	0	ShADadtfF	55	4143	58	71502	(empty)
1484403230.326955	CPJe2b2eytUnC2fKU7	192.168.86.105	55908	192.150.187.43	443	tcp	ssl	5.706497	668	6329	SF	T	F	0	ShADadtfF	13	1388	12	6961	(empty)
#+end_example

*** Example: conn.log#+begin_example - in columns via less
     #+begin_example
    cat conn.log | sed -e 's/\#fields//' -e 's/\#types//' | column -t | less -RS

#separator         \x09
#set_separator     ,
#empty_field       (empty)
#unset_field       -
#path              conn
#open              2017-01-14-09-00-06
ts                 uid                  id.orig_h                  id.orig_p  id.resp_h            
time               string               addr                       port       addr                 
1484406001.786522  CYp3CeHKLzn3ME3R8    fe80::60f9:1123:e071:d508  41096      fe80::e0b6:a28d:6a6e:
1484406002.273936  C4HGUk3oBXkhwMeK2j   192.168.86.105             60728      151.101.192.133      
1484406002.274152  CAQqcv1c1E1lxPR53    192.168.86.105             60730      151.101.192.133      
1484405955.263074  CLHD0c3Ewd4xTq1rpc   192.168.86.105             42809      216.58.217.142       
     #+end_example

*** Example: software.log - raw
#+begin_example
#separator \x09
#set_separator	,
#empty_field	(empty)
#unset_field	-
#path	software
#open	2017-01-14-08-16-34
#fields	ts	host	host_p	software_type	name	version.major	version.minor	version.minor2	version.minor3	version.addl	unparsed_version
#types	time	addr	port	enum	string	count	count	count	count	string	string
1484403394.069088	192.168.86.105	-	HTTP::BROWSER	URL/Emacs Emacs	26	0	50	1	X11	URL/Emacs Emacs/26.0.50.1 (X11; x86_64-pc-linux-gnu)
#+end_example

* DONE Make sure it bro restarts if it dies
   https://www.bro.org/sphinx/components/broctl/README.html#id8

   suggests the following cron entry

   #+begin_example
   */5 * * * * /usr/local/bro/bin/broctl cron    
   #+end_example

   which restarts bro if =broctl status= reports "crashed"

* DONE Some useful bash setup
    #+begin_example
# Set up default bro path
# May want to add to /etc/environment and/or other places
export PATH=/usr/local/bro/bin:$PATH

# alias to look at LONG bro logs in a sensible fashion
# arrow keys will scroll left and right
broLessFunc() {  
  #do things with parameters like $1 such as  
  cat $1 | sed -e 's/\#fields//' -e 's/\#types//' | column -t | less -RS
}  
alias bl=broLessFunc
    #+end_example

which enables things like

#+begin_example
bl conn.log
#+end_example

to see the connection log and 

#+begin_example
conn.log | egrep icmp\|\#  | bl 
#+end_example

to see only ICMP.  This the start of a poor man's [[https://tools.netsa.cert.org/silk/rwfilter.html][rwfilter]]


* TODO Some Possible Next Steps
** Tweak Collection
   - "collect all the things"
** Let it run for a couple of days
** Look at the raw data to get a feel for it
** Install some tools to enable analysis

#+TITLE: Pogoplug configuration as an NFS server
#+DATE: <2014-07-12 Sat>
#+AUTHOR: George Jones
#+EMAIL: gmj AT pobox DOT com
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:2 todo:t |:t
#+CREATOR: Emacs 24.3.50.1 (Org mode 8.2.5h)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

This is a log of the steps that I took to install arch linux on a
pogoplug 4 and set it up as a local storage device, export nfs and
mount it.  This is done for myself as a record of what I've done
because 1) I might have to repeat the process and 2) someone else
might find it useful.

Start here: http://archlinuxarm.org/platforms/armv5/pogoplug-series-4

* [0/8] Install basic pogoplug
** TODO Plug in pogoplug power
** TODO Plug in pogoplug to Internet connected port
** TODO Go to pogoplug.com/activate
** TODO Type in 26 digit/number ID on bottom of unit if needed.
** TODO Enable SSH on the pogoplug web site.
    See https://pogoplug.com/settings.
    Herein lies the risk should pogoplug go belly up, decide they
    don't want people rooting their devices anymore, etc.  
** TODO Change the password
** TODO Test SSH.
   Get address assigned by DHCP from devices attached to local
   router/WAP (in my case, http://192.168.1.1, login in as
   appropriate and look at connected devices to find pogoplug)
** TODO [optional] Assign a fixed address to the pogoplug.
   I did this by adding a DNS reservation at a fixed address for the
   MAC address of the Pogoplug. 
* TODO Root the Pogoplug
  See http://archlinuxarm.org/platforms/armv5/pogoplug-series-4.  I
    used a USB thumb drive in the top USB slot (you have to remove the
    cover)
* TODO Reboot
* TODO Attach storage

  I attached a 2 TB external USB drive to one of the USB ports which
  is formatted with NTFS.  I chose to keep it rather than formatting
  with ext4 so I can plug it in to other devices that understand NTFS.

** TODO  install NTFS-3G to enable NTFS writing
    
    #+BEGIN_EXAMPLE
    [root@alarm ~]# pacman -S ntfs-3g
    #+END_EXAMPLE
    
** TODO Find the partition
     
     #+BEGIN_EXAMPLE
     [root@alarm ~]# fdisk -l
     #+END_EXAMPLE

** TODO  Mount the ntfs partition

     #+BEGIN_EXAMPLE
     [root@alarm ~]# mount -t ntfs-3g /dev/sdb1 /mnt/data
     #+END_EXAMPLE

     I got the following error, because, apparently the partition was
     not correctly dismounted:

     #+BEGIN_EXAMPLE
     [root@alarm ~]# mount -t ntfs-3g /dev/sdb1 /mnt/data
     mount -t ntfs-3g /dev/sdb1 /mnt/data
     $MFTMirr does not match $MFT (record 0).
     Failed to mount '/dev/sdb1': Input/output error
     NTFS is either inconsistent, or there is a hardware fault, or it's a
     SoftRAID/FakeRAID hardware. In the first case run chkdsk /f on Windows
     then reboot into Windows twice. The usage of the /f parameter is very
     important! If the device is a SoftRAID/FakeRAID then first activate
     it and mount a different device under the /dev/mapper/ directory, (e.g.
     /dev/mapper/nvidia_eahaabcc1). Please see the 'dmraid' documentation
     for more details.
     #+END_EXAMPLE

** TODO fix NTFS filesystem problems

    Given that I don't have a windows system to run chkdisk with, I'm
    considering reformatting with ext4 or similar and moving on...but
    some quick googling found an answer:
    http://askubuntu.com/questions/47700/fix-corrupt-ntfs-partition-without-windows 
     
     
     #+BEGIN_EXAMPLE
     [root@alarm ~]# ntfsfix /dev/sdb1
     #+END_EXAMPLE
     
     after which 
     
     #+BEGIN_EXAMPLE
     mount -t ntfs-3g /dev/sdb1 /mnt/data
     #+END_EXAMPLE
     
     works just fine.

* [0/3] Set up a permanent mount of the storage on the pogoplug
** TODO Find the UUID
    
    #+BEGIN_EXAMPLE
    [root@alarm ~]# blkid /dev/sdb1
    blkid /dev/sdb1
    /dev/sdb1: LABEL="Seagate Expansion Drive" UUID="54F8DF61F8DF3FC2" TYPE="ntfs" PARTUUID="ba02d2a2-01" 
    #+END_EXAMPLE

** TODO Add a user 
    
    #+BEGIN_EXAMPLE
    useradd -m -g users -G wheel -s /bin/bash user
    #+END_EXAMPLE
    
** TODO create the fstab entry with linux compatible permissions allowing

    #+BEGIN_EXAMPLE
    cat <<END >> /etc/fstab
    # Mount internal Windows partition with linux compatible permissions, i.e. 755 for directories (dmask=022) and 644 for files (fmask=133)
    UUID=54F8DF61F8DF3FC2 /mnt/data ntfs-3g uid=user,gid=users,dmask=022,fmask=133 0 0
    END
    #+END_EXAMPLE 

* TODO Install NTP

  See
  https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon#Installation

  #+BEGIN_EXAMPLE
  pacman -S ntp				
  ntpd -q
  systemctl enable ntpd.service
  systemctl start  ntpd.service
  ntpq -p
  #+END_EXAMPLE

* [0/7] TODO Install and Configure NFS

  See https://wiki.archlinux.org/index.php/NFS

** TODO Install NFS Utilities
  #+BEGIN_EXAMPLE
  pacman -S nfs-utils
  #+END_EXAMPLE
** TODO Set up idmapd.conf
  #+BEGIN_EXAMPLE
  cat <<HERE > /etc/idmapd.conf
  [General]

  Verbosity = 1
  Pipefs-Directory = /var/lib/nfs/rpc_pipefs
  Domain = atomic
  
  [Mapping]

  Nobody-User = nobody
  Nobody-Group = nobody
  [General]
HERE
  #+END_EXAMPLE
** TODO Set up NFS options
  #+BEGIN_EXAMPLE
  if [ ! -f /etc/conf.d/nfs-common.conf.orig ]; then
    cp /etc/conf.d/nfs-common.conf /etc/conf.d/nfs-common.conf.orig
  fi

  cat /etc/conf.d/nfs-common.conf.orig | sed -e 's/^STATD_OPTS.*/STATD_OPTS="-p 32765 -o 32766 -T 32803"/' > /etc/conf.d/nfs-common.conf


  if [ ! -f /etc/conf.d/nfs-server.orig ]; then
    cp /etc/conf.d/nfs-server.conf /etc/conf.d/nfs-server.conf.orig
  fi

  cat /etc/conf.d/nfs-server.conf.orig | sed -e 's/^MOUNTD_OPTS.*/MOUNTD_OPTS="-p 20048"/' > /etc/conf.d/nfs-server.conf
  #+END_EXAMPLE
** TODO (re)start the NFS server
  #+BEGIN_EXAMPLE
  systemctl restart nfs-config
  systemctl stop rpc-statd
  systemctl start rpc-statd
  systemctl stop nfs-server
  systemctl start nfs-server
  rpcinfo -p
  #+END_EXAMPLE
** TODO Export the filesystem     

  #+BEGIN_EXAMPLE

  if [ ! -f /etc/exports.orig ]; then
    cp /etc/exports /etc/exports.orig
  fi

  cp /etc/exports.orig /etc/exports
  echo "/mnt/data 192.168.1.0/24(rw,no_subtree_check,nohide,all_squash,anonuid=0,anongid=0)" >> /etc/exports

  exportfs -rav
  
  #+END_EXAMPLE
** TODO Start NFS server on reboot

  #+BEGIN_EXAMPLE
  systemctl enable nfs-server.service
  systemctl start  nfs-server.service
  #+END_EXAMPLE
** IN-PROGRESS Open up firewall rules if needed

  #+BEGIN_EXAMPLE
  if [ ! -f /etc/iptables/iptables.rules.orig ]; then
    cp /etc/iptables/iptables.rules /etc/iptables/iptables.rules.orig
  fi

  cp /etc/iptables/iptables.rules.orig /etc/iptables/iptables.rules

  cat <<HERE >> /etc/iptables/iptables.rules
-A INPUT -p tcp -m tcp --dport 111 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 2049 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 20048 -j ACCEPT
-A INPUT -p udp -m udp --dport 111 -j ACCEPT
-A INPUT -p udp -m udp --dport 2049 -j ACCEPT
-A INPUT -p udp -m udp --dport 20048 -j ACCEPT
If using NFSv3 and the above listed static ports for rpc.statd and lockd these also need to be added to the configuration:

/etc/iptables/iptables.rules
-A INPUT -p tcp -m tcp --dport 32765 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 32803 -j ACCEPT
-A INPUT -p udp -m udp --dport 32765 -j ACCEPT
-A INPUT -p udp -m udp --dport 32803 -j ACCEPT
HERE  
  #+END_EXAMPLE

* [0/3] Client side NFS configuration
** TODO Configure NTP on the client
   Left as an exercise for the reader.  Your clients may vary.
** TODO Mount from the client by hand (assumes Ubuntu with packages installed)

  #+BEGIN_EXAMPLE
  showmount -e 192.168.1.222
  mount -t nfs 192.168.1.222:/mnt/data /mnt/data
  df
  #+END_EXAMPLE

** TODO Set up mount from fstab on boot

  #+BEGIN_EXAMPLE
if [ ! -f /etc/fstab.orig ]; then
    cp /etc/fstab /etc/fstab.orig
fi

cp /etc/fstab.orig /etc/fstab

cat <<HERE >> /etc/fstab
192.168.1.222:/mnt/data   /mnt/data   nfs4   rsize=8192,wsize=8192,timeo=14,_netdev	0 0
HERE
  #+END_EXAMPLE

* Outstanding Problems
  - None.






  


 

  
  
